int a0[0x10][0x10][0x10] = {{{0x10, 0x50, 0x60}}};
// int a1[0x10][0x10][0x10] = {{0x10}, {0x20, 0x30}, {0x40, {0x50, 0x60}}}, b[0x10] = {1, 2, 3, 4};
int arr[0x10][0x20][0x30] = {{{0x10, 0x11, 0x12}}, {{0x20, 0x21, 0x22}}, {{0x30, 0x31, 0x32}}};
int dimension_test[0x1][0x2][0x3][0x4][0x5];
int a = 2;

int arr[0x10][0x10] = {
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF},
    {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF}
};

void printArr() {
    int i = 0;
    int j = 0;
    while (i < 0x10) {
        while (j < 0x10) {
            printHex(arr[i][j]);
            j = j + 1;
            putchar(44);
            putchar(32);
        }
        i = i + 1;
        j = 0;
        printLn();
    }
}

void print2Int(int a, int b) {
    printInt(a);
    putchar(32);
    printInt(b);
    putchar(32);
    printLn();
    printHex(a);
    putchar(32);
    printHex(b);
    putchar(32);
    putchar(10);
}

int main() {
    const int a = 3;
//    a = 4;
    printHex(a);
    putchar(10);
    print2Int(0x2333, 0x3332);
    printLn();
    printArr();
    dimension_test[0][0][0][0][0] = 0xDEAD;
    dimension_test[0][0][0][0][1] = 0xBEEF;
    dimension_test[0][0][0][0][2] = 0x1337;
    dimension_test[0][0][0][0][3] = 0x7331;
    dimension_test[0][0][0][0][4] = 0x2333;
    dimension_test[0][0][2][0][0] = 0x3333;
    printInt(-a);
    printLn();
    printInt(+a);
    printLn();
    printInt(!a);
    printLn();
    printInt(!0);
    printLn();
    printInt(dimension_test[0][0][0][0][0]);
    printLn();
    printInt(dimension_test[0][0][0][0][1]);
    printLn();
    printInt(dimension_test[0][0][0][0][2]);
    printLn();
    printInt(dimension_test[0][0][0][0][3]);
    printLn();
    printInt(dimension_test[0][0][0][0][4]);
    printLn();
    int c = printHex(dimension_test[0][0][0][0][0]);
    printLn();
    printHex(dimension_test[0][0][0][0][1]);
    printLn();
    printHex(dimension_test[0][0][0][0][2]);
    printLn();
    printHex(dimension_test[0][0][0][0][3]);
    printLn();
    printHex(dimension_test[0][0][0][0][4]);
    printLn();
    printInt(dimension_test[0][0][2][0][0]);
    printLn();
    printInt(c);
    printLn();
    int i = 0;
    while (i < 10) {
        printHex(i);
        putchar(32);
        i = i + 1;
        if (i == 1) {
//            return 2;
            break;
        } else {
            putchar(33);
        }
    }
    putchar(33);
    putchar(10);
//    break;
    return -1;
}

int arr[0x2] = {0xDEAD, 0xBEEF};


int a;
int a;
int a;
int a;
int a;
int a;
int c = (1 + 2 * 4 / 3 + (1 + 1 * 3 % 2));
int d = 1;
int arr[0x2] = {0x1, 0x2};
int arr[0x10] = {0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF};

int b1 = 3;
int a2 = 4;